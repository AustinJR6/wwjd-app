rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthed() { return request.auth != null; }
    function isOwner(uid) { return isAuthed() && request.auth.uid == uid; }
    function isSubscribed(uid) {
      return exists(/databases/$(database)/documents/users/$(uid)) &&
             get(/databases/$(database)/documents/users/$(uid)).data.isSubscribed == true;
    }

    // User profile readable/writable by owner
    match /users/{uid} {
      allow read, update: if isOwner(uid);
      allow create: if isAuthed();

      // Chats & memories require subscription
      match /chats/{doc=**} {
        allow read: if isOwner(uid);
        allow write: if isOwner(uid) && isSubscribed(uid);
      }
      match /memories/{doc} {
        allow read: if isOwner(uid);
        allow write: if isOwner(uid) && isSubscribed(uid);
      }
      match /goals/{doc} {
        allow read: if isOwner(uid);
        allow write: if isOwner(uid) && isSubscribed(uid);
      }
    }
  }
}
