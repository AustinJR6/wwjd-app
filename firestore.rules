rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    // 🔐 User profile document
    match /users/{userId} {
      allow read, update: if isSignedIn() && request.auth.uid == userId;
      // Creation handled by the onUserCreate Cloud Function
      allow create: if false;
    }

    // ✅ Active challenge document
    match /activeChallenge/{docId} {
      allow read, write: if isSignedIn() && request.auth.uid == docId;
    }

    // 📊 Read-only subcollections used for counts
    match /{subCollection}/{docId} {
      allow read: if isSignedIn() && request.auth.uid == docId &&
        subCollection in ['confessionalSessions', 'journalEntries', 'dailyChallenges'];
    }

    // 📓 Journal entries stored outside the user document
    match /journalEntries/{userId}/entries/{entryId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }

    // 🕊️ Religion chat history
    match /religionChats/{userId}/messages/{messageId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }

    // 🕊️ Temporary religion chat history
    match /tempReligionChat/{userId}/messages/{messageId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }

    // 🙏 Temporary confessional sessions
    match /tempConfessionalSessions/{userId}/messages/{messageId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }

    // ✅ Completed challenges tracker
    match /completedChallenges/{userId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }

    // ⏳ Free ask cooldown document
    match /freeAsk/{userId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }

    // 📬 Subscription status
    match /subscriptions/{userId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }

    // 📸 Public collection used when submitting challenge proof
    // ⚠️ Consider using a per-user subcollection instead of a shared one.
    match /challengeProofs/{docId} {
      allow create: if isSignedIn();
    }

    // 🏢 Organization documents
    match /organizations/{orgId} {
      allow read: if isSignedIn();
      allow update, delete: if isSignedIn() && request.auth.uid in resource.data.admins;
      // Creation of organizations should be done via a trusted server process
      allow create: if false;
    }

    // 🌍 Static lookup collections
    // Allow authenticated users to read regions and religions, including any
    // nested subcollections or documents.
    match /regions/{path=**} {
      allow read: if isSignedIn();
    }

    // 📖 Religion lookup collection uses capitalized document IDs
    // Match the top-level document and any nested paths
    match /religion/{religionId} {
      allow read: if isSignedIn();
      match /{subPath=**} {
        allow read: if isSignedIn();
      }
    }
  }
}
